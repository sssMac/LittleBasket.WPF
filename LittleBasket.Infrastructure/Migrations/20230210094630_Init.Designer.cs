// <auto-generated />
using System;
using LittleBasket.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LittleBasket.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230210094630_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LittleBasket.Domain.Entities.Check", b =>
                {
                    b.Property<Guid>("HistoryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("HistoryId", "ProductId");

                    b.ToTable("Checks");
                });

            modelBuilder.Entity("LittleBasket.Domain.Entities.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("Date")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("LittleBasket.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0e6603ad-9296-4f3e-8fcb-bce88c58871f"),
                            IsVisible = false,
                            Name = "Молоко"
                        },
                        new
                        {
                            Id = new Guid("0dce9faf-322d-4d86-b737-70515b3aff22"),
                            IsVisible = false,
                            Name = "Хлеб"
                        },
                        new
                        {
                            Id = new Guid("19d2459c-85f4-49b2-b251-c8ce88437ff6"),
                            IsVisible = false,
                            Name = "Мясо"
                        },
                        new
                        {
                            Id = new Guid("2c1f9af4-6eeb-404f-b148-984d8faa6f48"),
                            IsVisible = false,
                            Name = "Масло"
                        },
                        new
                        {
                            Id = new Guid("1355dab6-9150-439a-a7dd-771c00b108ef"),
                            IsVisible = false,
                            Name = "Арбуз"
                        },
                        new
                        {
                            Id = new Guid("4083bbc6-bad7-41dd-84b9-be5f9a72a376"),
                            IsVisible = false,
                            Name = "Колбаса"
                        },
                        new
                        {
                            Id = new Guid("85e7ec78-dc31-476c-9d39-da8df51e7935"),
                            IsVisible = false,
                            Name = "Сыр"
                        },
                        new
                        {
                            Id = new Guid("f2e8609e-4ee3-4bbd-9e89-b46f51732a8a"),
                            IsVisible = false,
                            Name = "Печенье"
                        });
                });

            modelBuilder.Entity("LittleBasket.Domain.Entities.Check", b =>
                {
                    b.HasOne("LittleBasket.Domain.Entities.History", "History")
                        .WithMany("Checks")
                        .HasForeignKey("HistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("History");
                });

            modelBuilder.Entity("LittleBasket.Domain.Entities.History", b =>
                {
                    b.Navigation("Checks");
                });
#pragma warning restore 612, 618
        }
    }
}
