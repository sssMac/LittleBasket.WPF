// <auto-generated />
using System;
using LittleBasket.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LittleBasket.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LittleBasket.Domain.Entities.Check", b =>
                {
                    b.Property<Guid>("HistoryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("HistoryId", "ProductId");

                    b.ToTable("Checks");
                });

            modelBuilder.Entity("LittleBasket.Domain.Entities.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("Date")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("LittleBasket.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4bad619f-6424-4b52-9803-0bddbb511606"),
                            IsVisible = true,
                            Name = "Молоко"
                        },
                        new
                        {
                            Id = new Guid("075c8879-2da9-4be8-9e1b-14ca3899c3db"),
                            IsVisible = true,
                            Name = "Хлеб"
                        },
                        new
                        {
                            Id = new Guid("9ada0269-4ba4-48cb-9228-c15785ecd7c6"),
                            IsVisible = true,
                            Name = "Мясо"
                        },
                        new
                        {
                            Id = new Guid("2c97c485-d08c-4284-8272-0560c1195c94"),
                            IsVisible = true,
                            Name = "Масло"
                        },
                        new
                        {
                            Id = new Guid("b56e06a3-69ed-4376-8fb6-9b0a31f23fbd"),
                            IsVisible = true,
                            Name = "Арбуз"
                        },
                        new
                        {
                            Id = new Guid("8ed3f4a4-97d1-438c-adbf-ab3d67596be5"),
                            IsVisible = false,
                            Name = "Колбаса"
                        },
                        new
                        {
                            Id = new Guid("7084ff33-0f61-4ecb-9002-09cba3099bdc"),
                            IsVisible = false,
                            Name = "Сыр"
                        },
                        new
                        {
                            Id = new Guid("69d4ed6d-6e84-4516-8313-362c5a383622"),
                            IsVisible = false,
                            Name = "Печенье"
                        });
                });

            modelBuilder.Entity("LittleBasket.Domain.Entities.Check", b =>
                {
                    b.HasOne("LittleBasket.Domain.Entities.History", "History")
                        .WithMany("Checks")
                        .HasForeignKey("HistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("History");
                });

            modelBuilder.Entity("LittleBasket.Domain.Entities.History", b =>
                {
                    b.Navigation("Checks");
                });
#pragma warning restore 612, 618
        }
    }
}
